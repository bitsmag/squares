!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Board	models/board.js	/^function Board(){$/;"	c
Board.getCountdownDuration	models/board.js	/^Board.prototype.getCountdownDuration = function() {$/;"	m
Board.getDoubleSpeedDuration	models/board.js	/^Board.prototype.getDoubleSpeedDuration = function() {$/;"	m
Board.getHeight	models/board.js	/^Board.prototype.getHeight = function() {$/;"	m
Board.getMatchDuration	models/board.js	/^Board.prototype.getMatchDuration = function() {$/;"	m
Board.getSquare	models/board.js	/^Board.prototype.getSquare = function(id) { \/\/ ERROR: squareNotFound$/;"	m
Board.getSquares	models/board.js	/^Board.prototype.getSquares = function() {$/;"	m
Board.getStartSquares	models/board.js	/^Board.prototype.getStartSquares = function() {$/;"	m
Board.getWidth	models/board.js	/^Board.prototype.getWidth = function() {$/;"	m
Match	models/match.js	/^function Match(){$/;"	c
Match.addPlayer	models/match.js	/^Match.prototype.addPlayer = function(player) { \/\/ ERROR: matchIsFull, nameInUse$/;"	m
Match.countdownDurationDecrement	models/match.js	/^Match.prototype.countdownDurationDecrement = function() {$/;"	m
Match.destroy	models/match.js	/^Match.prototype.destroy = function() {$/;"	m
Match.durationDecrement	models/match.js	/^Match.prototype.durationDecrement = function() {$/;"	m
Match.getBoard	models/match.js	/^Match.prototype.getBoard = function() {$/;"	m
Match.getController	models/match.js	/^Match.prototype.getController = function() {$/;"	m
Match.getCountdownDuration	models/match.js	/^Match.prototype.getCountdownDuration = function() {$/;"	m
Match.getDuration	models/match.js	/^Match.prototype.getDuration = function() {$/;"	m
Match.getMatchCreator	models/match.js	/^Match.prototype.getMatchCreator = function() { \/\/ ERROR: matchCreatorNotFound$/;"	m
Match.getPlayer	models/match.js	/^Match.prototype.getPlayer = function(playerName) { \/\/ ERROR: playerNotFound$/;"	m
Match.getPlayerByColor	models/match.js	/^Match.prototype.getPlayerByColor = function(playerColor) { \/\/ ERROR: playerNotFound$/;"	m
Match.getPlayers	models/match.js	/^Match.prototype.getPlayers = function() {$/;"	m
Match.isActive	models/match.js	/^Match.prototype.isActive = function() {$/;"	m
Match.isNameInUse	models/match.js	/^Match.prototype.isNameInUse = function(name) {$/;"	m
Match.removePlayer	models/match.js	/^Match.prototype.removePlayer = function(player) {$/;"	m
Match.setActive	models/match.js	/^Match.prototype.setActive = function(active) {$/;"	m
Match.updateBoard	models/match.js	/^Match.prototype.updateBoard = function(playerPositions, specials) {$/;"	m
Match.updatePlayers	models/match.js	/^Match.prototype.updatePlayers = function(playerPositions) {$/;"	m
Match.updateSpecials	models/match.js	/^Match.prototype.updateSpecials = function(specials) {$/;"	m
MatchController	controllers/matchController.js	/^function MatchController(match){$/;"	c
MatchController.function.durationDecrement	controllers/matchController.js	/^  function durationDecrement(){$/;"	f
MatchController.function.tick	controllers/matchController.js	/^  function tick(){$/;"	f
MatchController.matchTicker	controllers/matchController.js	/^MatchController.prototype.matchTicker = function(){$/;"	m
MatchController.startMatch	controllers/matchController.js	/^MatchController.prototype.startMatch = function(){$/;"	m
MatchController.timer	controllers/matchController.js	/^MatchController.prototype.timer = function(duration){$/;"	m
MatchesManager	models/matchesManager.js	/^function MatchesManager(){$/;"	c
MatchesManager.addMatch	models/matchesManager.js	/^MatchesManager.prototype.addMatch = function(match) {$/;"	m
MatchesManager.getMatch	models/matchesManager.js	/^MatchesManager.prototype.getMatch = function(matchId) { \/\/ERROR: matchNotFound$/;"	m
MatchesManager.getMatches	models/matchesManager.js	/^MatchesManager.prototype.getMatches = function(matchId) {$/;"	m
MatchesManager.removeMatch	models/matchesManager.js	/^MatchesManager.prototype.removeMatch = function(match) {$/;"	m
Player	models/player.js	/^function Player(name, match, matchCreator){ \/\/ERROR: matchNotFound, matchIsFull, nameInUse, matchIsActive$/;"	c
Player.getActiveDirection	models/player.js	/^Player.prototype.getActiveDirection = function() {$/;"	m
Player.getColor	models/player.js	/^Player.prototype.getColor = function() {$/;"	m
Player.getDoubleSpeedSpecial	models/player.js	/^Player.prototype.getDoubleSpeedSpecial = function() {$/;"	m
Player.getName	models/player.js	/^Player.prototype.getName = function() {$/;"	m
Player.getPosition	models/player.js	/^Player.prototype.getPosition = function() {$/;"	m
Player.getScore	models/player.js	/^Player.prototype.getScore = function() {$/;"	m
Player.getSocket	models/player.js	/^Player.prototype.getSocket = function() {$/;"	m
Player.increaseScore	models/player.js	/^Player.prototype.increaseScore = function(points) {$/;"	m
Player.isMatchCreator	models/player.js	/^Player.prototype.isMatchCreator = function() {$/;"	m
Player.setActiveDirection	models/player.js	/^Player.prototype.setActiveDirection = function(dir) {$/;"	m
Player.setPosition	models/player.js	/^Player.prototype.setPosition = function(pos) {$/;"	m
Player.setSocket	models/player.js	/^Player.prototype.setSocket = function(socket) {$/;"	m
Player.startDoubleSpeedSpecial	models/player.js	/^Player.prototype.startDoubleSpeedSpecial = function(duration) {$/;"	m
Square	models/square.js	/^function Square(squareId, edgesTo, position, startSquares){$/;"	c
Square.getColor	models/square.js	/^Square.prototype.getColor = function() {$/;"	m
Square.getDoubleSpeedSpecial	models/square.js	/^Square.prototype.getDoubleSpeedSpecial = function() {$/;"	m
Square.getEdgesTo	models/square.js	/^Square.prototype.getEdgesTo = function() {$/;"	m
Square.getId	models/square.js	/^Square.prototype.getId = function() {$/;"	m
Square.getPosition	models/square.js	/^Square.prototype.getPosition = function() {$/;"	m
Square.isDfsVisited	models/square.js	/^Square.prototype.isDfsVisited = function() {$/;"	m
Square.setColor	models/square.js	/^Square.prototype.setColor = function(color) {$/;"	m
Square.setDfsVisited	models/square.js	/^Square.prototype.setDfsVisited = function(visited) {$/;"	m
Square.setDoubleSpeedSpecial	models/square.js	/^Square.prototype.setDoubleSpeedSpecial = function(doubleSpeedSpecial) {$/;"	m
author	package.json	/^  "author": "sven",$/;"	f
calculateFuturePos	controllers/matchTicker/positionCalc.js	/^function calculateFuturePos(currentPosition, activeDirection, board, match){$/;"	f
calculateNewPlayerPositions	controllers/matchTicker/positionCalc.js	/^function calculateNewPlayerPositions(match, playerList){$/;"	f
chai	package.json	/^    "chai": "*",$/;"	f
checkSpecialChars	views/index.html	/^  function checkSpecialChars(selector){$/;"	f
clearFlipAnimationAfterTimeout	views/assets/js/match.js	/^  function clearFlipAnimationAfterTimeout(elementSelector, i, animDuration){$/;"	f
clearSquares	views/assets/js/match.js	/^function clearSquares(data){$/;"	f
clearSquares.clearSquaresAfterTimeout	views/assets/js/match.js	/^  function clearSquaresAfterTimeout(){$/;"	f
countdown	views/assets/js/match.js	/^function countdown(data){$/;"	f
createMatch	views/index.html	/^  function createMatch(){$/;"	f
createUniqueId	models/match.js	/^function createUniqueId(){$/;"	f
dependencies	package.json	/^  "dependencies": {$/;"	f
description	package.json	/^  "description": "socket based multiplayer game",$/;"	f
devDependencies	package.json	/^  "devDependencies": {$/;"	f
express	package.json	/^    "express": "*",$/;"	f
function.countdownDurationDecrement	controllers/matchController.js	/^  function countdownDurationDecrement(){$/;"	f
function.runMatch	controllers/matchController.js	/^  function runMatch(){$/;"	f
getPlayerPoints	controllers/matchTicker/circuitsCheck.js	/^function getPlayerPoints(match){$/;"	f
getPoints	controllers/matchTicker/circuitsCheck.js	/^function getPoints(theSquare, theColor, match){$/;"	f
getPoints.checkValidity	controllers/matchTicker/circuitsCheck.js	/^  function checkValidity(stack, alreadyVisitedVertex){ \/\/ Will check if a circuit is valid. returns the value of the circuit if valid, otherwise 0$/;"	f
getPoints.dfs	controllers/matchTicker/circuitsCheck.js	/^  function dfs(theSquare, theColor){ \/\/ The actual algorithm (Depth First Search)$/;"	f
getPoints.getVertices	controllers/matchTicker/circuitsCheck.js	/^  function getVertices(s, c){ \/\/ Returns all squares in the same color reachable from the current square (neighbors)$/;"	f
getPoints.setAllSquaresUnvisited	controllers/matchTicker/circuitsCheck.js	/^  function setAllSquaresUnvisited(){ \/\/ dfsVisited is a helper property for the algorithm -> set it to false for each square in the end$/;"	f
getPoints.setPrefDir	controllers/matchTicker/circuitsCheck.js	/^  function setPrefDir(theSquare, nextSquare){ \/\/ Returns the direction the algorithm is "going"$/;"	f
getSpecials	controllers/matchTicker/randomSpecials.js	/^function getSpecials(match){$/;"	f
getUnusedColor	models/player.js	/^function getUnusedColor(match) { \/\/ ERROR: matchIsFull$/;"	f
istanbul	package.json	/^    "istanbul": "*"$/;"	f
joinMatch	views/index.html	/^  function joinMatch(){$/;"	f
keywords	package.json	/^  "keywords": [$/;"	f
license	package.json	/^  "license": "BSD-2-Clause"$/;"	f
main	package.json	/^  "main": "index.js",$/;"	f
matchEnd	views/assets/js/match.js	/^function matchEnd(){$/;"	f
matchesManager.Match	models/match.js	/^}$/;"	c
matchesManager.matchesManager.Match.getId	models/match.js	/^Match.prototype.getId = function() {$/;"	m
mocha	package.json	/^    "mocha": "*",$/;"	f
name	package.json	/^  "name": "squares",$/;"	f
prepareMatch	views/assets/js/match.js	/^function prepareMatch(data){$/;"	f
repository	package.json	/^  "repository": {$/;"	f
respond	sockets/createMatchSockets.js	/^function respond(socket){$/;"	f
respond	sockets/matchSockets.js	/^function respond(socket){$/;"	f
scripts	package.json	/^  "scripts": {$/;"	f
sendClearSquaresEvent	sockets/matchSockets.js	/^function sendClearSquaresEvent(match, clearSquares, clearSpecials){$/;"	f
sendCountdownEvent	sockets/matchSockets.js	/^function sendCountdownEvent(match){$/;"	f
sendFatalErrorEvent	sockets/matchSockets.js	/^function sendFatalErrorEvent(match){$/;"	f
sendMatchCreatorDisconnectedEvent	sockets/matchSockets.js	/^function sendMatchCreatorDisconnectedEvent(match){$/;"	f
sendMatchEndEvent	sockets/matchSockets.js	/^function sendMatchEndEvent(match){$/;"	f
sendPlayerConnectedEvent	sockets/matchSockets.js	/^function sendPlayerConnectedEvent(match, player){$/;"	f
sendPlayerDisconnectedEvent	sockets/matchSockets.js	/^function sendPlayerDisconnectedEvent(match, player){$/;"	f
sendPrepareMatchEvent	sockets/matchSockets.js	/^function sendPrepareMatchEvent(match){$/;"	f
sendUpdateBoardEvent	sockets/matchSockets.js	/^function sendUpdateBoardEvent(match, specials){$/;"	f
sendUpdateScoreEvent	sockets/matchSockets.js	/^function sendUpdateScoreEvent(match){$/;"	f
setKeyListener	views/assets/js/match.js	/^function setKeyListener(){$/;"	f
socket.io	package.json	/^    "socket.io": "*"$/;"	f
start	package.json	/^    "start": "node index.js"$/;"	f
swig	package.json	/^    "swig": "*",$/;"	f
test	package.json	/^    "test": ".\/node_modules\/mocha\/bin\/mocha --recursive",$/;"	f
type	package.json	/^    "type": "git",$/;"	f
updateBoard	views/assets/js/match.js	/^function updateBoard(data){$/;"	f
updateScore	views/assets/js/match.js	/^function updateScore(data){$/;"	f
url	package.json	/^    "url": "no"$/;"	f
version	package.json	/^  "version": "0.0.0",$/;"	f
vertices.move	controllers/matchTicker/circuitsCheck.js	/^    let vertices = [];$/;"	c
